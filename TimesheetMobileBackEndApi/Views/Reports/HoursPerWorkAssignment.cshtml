@model IEnumerable<TimesheetMobileBackEndApi.ViewModels.HoursPerWorkAssignmentModel>

@{
    ViewBag.Title = "HoursPerWorkAssignment";
}


<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<h2>HoursPerWorkAssignment</h2>

@section scripts{
    <script src="~/Scripts/Chart.js"></script>
        <script>
            var myChart = null;
            var chartOptions = {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            };
            function alustaGraafi() {
                var ctx = document.getElementById('myChart').getContext('2d');
                myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: [],
                        datasets: [{
                            label: '# of Votes',
                            data: [],
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                                'rgba(153, 102, 255, 0.2)',
                                'rgba(255, 159, 64, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)',
                                'rgba(153, 102, 255, 1)',
                                'rgba(255, 159, 64, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: chartOptions
                });
            
            }
        $(function () {
            //sivun alustus
            alustaGraafi();
            $.get("/reports/GetTimesheetCounts", function (data) {
                alert("Data haettu");

                myChart.config.data.datasets[0].data = data.Counts;
                myChart.config.data.labels = data.Labels;
                myChart.update();

                myChart.Bar(data.Counts, chartOptions);
                alert("Kaavio alustettu");


            });
        });
    </script>
    

    <form id="date-range-form" action="@Url.Action("HoursPerWorkAssignmentAsExcel3", "Reports")" method="post">
        <label for="from">From</label>
        <input type="text" id="from" name="dateFrom">
        <label for="to">to</label>
        <input type="text" id="to" name="dateTo">
        <input type='submit' value='Export to Excel' />
    </form>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script>
        $(function () {
            $("#from").datepicker({
                dateFormat: "yy-mm-dd",
                defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 1,
                onClose: function (selectedDate) {
                    $("#to").datepicker("option", "minDate", selectedDate);

                }
            });
            $("#to").datepicker({
                dateFormat: "yy-mm-dd",
                defaultDate: "+1w",
                changeMonth: true,
                numberOfMonths: 1,
                onClose: function (selectedDate) {
                    $("#from").datepicker("option", "maxDate", selectedDate);

                },
            });
        });
    </script>

    @Html.ActionLink("Create New", "Create")
    

    <a href="~/Reports/HoursPerWorkAssignmentAsExcel" class="w3-btn w3-large">Test</a>
    <a href="~/Reports/HoursPerWorkAssignmentAsExcel2" class="w3-btn w3-large">Export todays assignments to Excel</a>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id_WorkAssignment)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.WorkAssignmentName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalHours)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.WorkComplete)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StopTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id_WorkAssignment)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WorkAssignmentName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalHours)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WorkComplete)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StopTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comments)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }

    </table>
    <p></p>
    <p></p>

    <canvas id="myChart" width="400" height="200"></canvas>
}

